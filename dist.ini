
name = Term-FormatColumns
main_module             = lib/Term/FormatColumns.pm
author = Doug Bell <preaction@cpan.org>
license = Perl_5
copyright_holder = Doug Bell
copyright_year          = 2015

[Authority]
authority  = cpan:PREACTION
do_munging = 0

[MetaResources]
homepage                = https://github.com/preaction/Term-FormatColumns
repository.web          = https://github.com/preaction/Term-FormatColumns
repository.url          = https://github.com/preaction/Term-FormatColumns.git
bugtracker.web          = https://github.com/preaction/Term-FormatColumns/issues
repository.type         = git

; --- Module management
[@Filter]
-bundle = @Basic
; GatherDir must be configured separately
-remove = GatherDir

[MetaJSON]
[ReadmeFromPod]
[ReadmeMarkdownFromPod]
[PodWeaver]
[PkgVersion]
[CPANFile]
[Git::Contributors]
; authordep Pod::Weaver::Section::Contributors
[Test::ReportPrereqs]
[Test::Compile]

; --- Repository management
[Git::GatherDir]
include_dotfiles = 1
prune_directory = ^eg
; Exclude dotfiles in the root directory
exclude_match = ^\.[^/]+$
; Exclude ini files in the root directory
exclude_match = ^[^/]+\.ini$
; Exclude generated root content, which is included by the various plugins
; Without this, we get an error about duplicate content
exclude_filename = cpanfile
exclude_filename = LICENSE
exclude_filename = CHANGES
exclude_filename = README
exclude_filename = README.mkdn
exclude_filename = Makefile.PL

[ChangelogFromGit::CPAN::Changes]
; Create a changelog from the git repository commits
; The changelog will contain the short description of the change
file_name = CHANGES
show_author = 0

[Run::AfterBuild]
; Add travis and coveralls badges to README.mkdn
run = perl -pi -e 's{(# SYNOPSIS)}{# STATUS\n\n<a href="https://travis-ci.org/preaction/Term-FormatColumns"><img src="https://travis-ci.org/preaction/Term-FormatColumns.svg?branch=master"></a><a href="https://coveralls.io/r/preaction/Term-FormatColumns"><img src="https://coveralls.io/repos/preaction/Term-FormatColumns/badge.png" alt="Coverage Status" /></a>\n\n$1}' %d/README.mkdn

[CopyFilesFromBuild]
; Copy generated content to the repository root so users without Dist::Zilla
; can use it
copy = cpanfile
copy = LICENSE
copy = CHANGES
copy = README
copy = README.mkdn
copy = Makefile.PL

; --- Git management
[Git::NextVersion]
[@Git]
; Automatically commit these files during release
changelog = CHANGES
allow_dirty_match = README.*
allow_dirty_match = .*[.]PL
allow_dirty = LICENSE
allow_dirty = CHANGES
allow_dirty = cpanfile
; Automatically commit with release version and changelog
commit_msg = release v%v%n%n%c
tag_message = %N v%v - %{yyyy-MM-dd}d%n%n%c ; Tag annotations show up in github release list

; --- Project-specific directives

[Prereqs]
strict = 0
warnings = 0
List::Util = 0
Symbol = 0
POSIX = 0
Term::ReadKey = 2.30
List::MoreUtils = 0.33
Sub::Exporter = 0.984
String::TtyLength = 0.02

[Prereqs / TestRequires]
Test::More = 0.88 ; The first version with done_testing
